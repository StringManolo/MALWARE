package p003b.p004b.p005a;

import java.util.Arrays;

public class C0003b {
    public static <T extends Throwable> T m0a(T t) {
        String name = C0003b.class.getName();
        StackTraceElement[] stackTrace = t.getStackTrace();
        int length = stackTrace.length;
        int i = -1;
        for (int i2 = 0; i2 < length; i2++) {
            if (name.equals(stackTrace[i2].getClassName())) {
                i = i2;
            }
        }
        t.setStackTrace((StackTraceElement[]) Arrays.copyOfRange(stackTrace, i + 1, length));
        return t;
    }

    public static void m1a(Object obj, String str) {
        if (obj == null) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append(str);
            stringBuilder.append(" must not be null");
            Throwable illegalStateException = new IllegalStateException(stringBuilder.toString());
            C0003b.m0a(illegalStateException);
            throw ((IllegalStateException) illegalStateException);
        }
    }

    public static void m2a(String str) {
        StackTraceElement stackTraceElement = Thread.currentThread().getStackTrace()[3];
        String className = stackTraceElement.getClassName();
        String methodName = stackTraceElement.getMethodName();
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("Parameter specified as non-null is null: method ");
        stringBuilder.append(className);
        stringBuilder.append(".");
        stringBuilder.append(methodName);
        stringBuilder.append(", parameter ");
        stringBuilder.append(str);
        Throwable illegalArgumentException = new IllegalArgumentException(stringBuilder.toString());
        C0003b.m0a(illegalArgumentException);
        throw ((IllegalArgumentException) illegalArgumentException);
    }
}
