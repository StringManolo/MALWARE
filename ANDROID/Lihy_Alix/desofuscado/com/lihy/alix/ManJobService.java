package com.lihy.alix;

import android.annotation.TargetApi;
import android.app.job.JobInfo;
import android.app.job.JobInfo.Builder;
import android.app.job.JobParameters;
import android.app.job.JobScheduler;
import android.app.job.JobService;
import android.content.ComponentName;
import android.content.Context;
import p003b.C0001a;
import p003b.p004b.p005a.C0002a;
import p003b.p004b.p005a.C0003b;

@TargetApi(21)
public final class ManJobService extends JobService {
    public static final C0007a f4a = new C0007a(null);

    public static final class C0007a {
        public /* synthetic */ C0007a(C0002a c0002a) {
        }

        public final void m4a(Context context) {
            if (context != null) {
                try {
                    Object systemService = context.getSystemService("jobscheduler");
                    if (systemService != null) {
                        JobScheduler jobScheduler = (JobScheduler) systemService;
                        for (JobInfo jobInfo : jobScheduler.getAllPendingJobs()) {
                            C0003b.m1a(jobInfo, "jobInfo");
                            int id = jobInfo.getId();
                            867;
                            if (id == 867) {
                                jobScheduler.cancel(867);
                            }
                        }
                        867;
                        Builder builder = new Builder(867, new ComponentName(context, ManJobService.class));
                        builder.setRequiredNetworkType(1);
                        builder.setPersisted(true);
                        builder.setRequiresCharging(null);
                        builder.setPeriodic((long) 1020000);
                        jobScheduler.schedule(builder.build());
                        return;
                    }
                    throw new C0001a("null cannot be cast to non-null type android.app.job.JobScheduler");
                } catch (Context context2) {
                    context2.printStackTrace();
                    return;
                }
            }
            C0003b.m2a("context");
            throw null;
        }
    }

    public boolean onStartJob(android.app.job.JobParameters r3) {
        /* JADX: method processing error */
/*
Error: java.lang.NullPointerException: Attempt to invoke virtual method 'jadx.core.dex.attributes.IAttribute jadx.core.dex.nodes.BlockNode.get(jadx.core.dex.attributes.AType)' on a null object reference
	at jadx.core.dex.visitors.regions.ProcessTryCatchRegions.searchTryCatchDominators(ProcessTryCatchRegions.java:75)
	at jadx.core.dex.visitors.regions.ProcessTryCatchRegions.process(ProcessTryCatchRegions.java:45)
	at jadx.core.dex.visitors.regions.RegionMakerVisitor.postProcessRegions(RegionMakerVisitor.java:63)
	at jadx.core.dex.visitors.regions.RegionMakerVisitor.visit(RegionMakerVisitor.java:58)
	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:31)
	at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:17)
	at jadx.core.ProcessClass.process(ProcessClass.java:37)
	at jadx.core.ProcessClass.processDependencies(ProcessClass.java:59)
	at jadx.core.ProcessClass.process(ProcessClass.java:42)
	at jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:306)
	at jadx.api.JavaClass.decompile(JavaClass.java:62)
	at jadx.api.JadxDecompiler$1.run(JadxDecompiler.java:199)
*/
        /*
        r2 = this;
        if (r3 == 0) goto L_0x0012;
    L_0x0002:
        r3 = com.lihy.alix.MamaActivity.f3a;	 Catch:{ all -> 0x0010 }
        r0 = r2.getApplicationContext();	 Catch:{ all -> 0x0010 }
        r1 = "applicationContext";	 Catch:{ all -> 0x0010 }
        p003b.p004b.p005a.C0003b.m1a(r0, r1);	 Catch:{ all -> 0x0010 }
        r3.m3a(r0);	 Catch:{ all -> 0x0010 }
    L_0x0010:
        r3 = 0;
        return r3;
    L_0x0012:
        r3 = "params";
        p003b.p004b.p005a.C0003b.m2a(r3);
        r3 = 0;
        throw r3;
        */
        throw new UnsupportedOperationException("Method not decompiled: com.lihy.alix.ManJobService.onStartJob(android.app.job.JobParameters):boolean");
    }

    public boolean onStopJob(JobParameters jobParameters) {
        if (jobParameters != null) {
            return null;
        }
        C0003b.m2a("params");
        throw null;
    }
}
